version: '3.8'

services:
  nginx:
    image: nginx:stable
    container_name: "personal_news_nginx"
    restart: unless-stopped
    depends_on:
      - api
      - admin
      - guvenlikzafiyeti
      - siberkariyer
      - blabs
    ports:
      - 80:80
      - 443:443
    networks:
      - personal_news_network
    volumes:
      - ./nginx/certs:/etc/certs
      - ./nginx/conf.d:/etc/nginx/conf.d
      - api_media:/usr/share/nginx/html/media:ro
      - api_static:/usr/share/nginx/html/static:ro
  db:
    container_name: "personal_news_${POSTGRES_HOST}"
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
  api:
    container_name: "personal_news_api"
    build:
      context: ./backend
    depends_on:
      - db
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOST
  frontend:
    container_name: "personal_news_frontend"
    build:
      context: ./frontend
    depends_on:
      - api
    environment:
      VUE_APP_BASE_URL: http://api:8000
  frontend_vue3:
    container_name: "personal_news_frontend_vue3"
    build:
      context: ./frontend_vue3
    depends_on:
      - api
    environment:
      VUE_APP_BASE_URL: http://api:8000
#    healthcheck:
#      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
#      interval: 10s
#      timeout: 5s
#      retries: 5
volumes:
  api_media:
  api_static:
  database:
  frontend:


networks:
  personal_news_network:
