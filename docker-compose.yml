version: '3.8'

services:
  nginx:
    image: nginx:stable
    container_name: nginx
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - frontend
    ports:
      - 80:80
      - 443:443
    networks:
      - personal_news_network
    volumes:
      - ./nginx/reverse-proxy/config/templates:/etc/nginx/templates
      - ./nginx/reverse-proxy/config/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/reverse-proxy/config/pages:/etc/nginx/pages
      - ./nginx/reverse-proxy/certs:/etc/certs
      - api_media:/usr/share/nginx/html/media:ro
      - api_static:/usr/share/nginx/html/static:ro
  api:
    container_name: api
    build:
      context: ./backend
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - api_media:/app/media
      - api_static:/app/static
    networks:
      - personal_news_network
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    env_file:
      - .env
    depends_on:
      - api
    networks:
      - personal_news_network
    volumes:
      - ./nginx/frontend/config/nginx.conf:/etc/nginx/nginx.conf
  db:
    container_name: ${POSTGRES_HOST}
    image: postgres:latest
    restart: always
    env_file:
      - .env
    networks:
      - personal_news_network
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  personal_news_network:
volumes:
  api_media:
  api_static:
  frontend:
