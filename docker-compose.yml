version: '3.8'

services:
  nginx:
    image: nginx:stable
    container_name: nginx
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - frontend
    ports:
      - 80:80
      - 443:443
    networks:
      - personal_news_network
    volumes:
      - ./nginx/certs:/etc/certs
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/pages:/etc/nginx/pages
      - api_media:/usr/share/nginx/html/media:ro
      - api_static:/usr/share/nginx/html/static:ro
      - frontend:/usr/share/nginx/html
  api:
    container_name: api
    build:
      context: ./backend
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - api_media:/app/media
      - api_static:/app/static
    networks:
      - personal_news_network
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    env_file:
      - .env
    depends_on:
      - api
    networks:
      - personal_news_network
    volumes:
      - frontend:/app/dist
  db:
    container_name: ${POSTGRES_HOST}
    image: postgres:latest
    restart: always
    env_file:
      - .env
    networks:
      - personal_news_network
#    healthcheck:
#      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
#      interval: 10s
#      timeout: 5s
#      retries: 5
networks:
  personal_news_network:
volumes:
  api_media:
  api_static:
  frontend:
